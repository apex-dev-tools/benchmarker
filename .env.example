# -------------------------------------------------------------------------------#
# MANDATORY PARAMETERS TO SET
# The following parameters HAVE TO BE set by the user working with Benchmarker
# -------------------------------------------------------------------------------#

# SF_BENCHMARK_CREDENTIALS
# Credentials for your Salesforce org.
#  Option 1 (for classic orgs):
#   * The first token is your username
#   * The second token is your password
# 	* The third toker is your security token
#   * The fourth token is your login URL
SF_USERNAME=yourUsername
SF_PASSWORD=yourPassword
SF_TOKEN=yourSecurityToken
SF_LOGIN=yourSalesforceLoginUrl
# Option 2 (for scratch orgs):
SFDX_USERNAME=yourUsernameOrAlias

# -------------------------------------------------------------------------------#
# OPTIONAL PARAMETERS TO SET
# The following parameters does not need to be set by the user working with Benchmarker as they have a predefined value, but can be changed as user desires
# -------------------------------------------------------------------------------#

# HEADLESS
# This boolean flag indicates if the test is going to be run in headless or not (in case the test type is 'Form Load')
HEADLESS=false

# INCOGNITO_BROWSER
# This boolean flag indicates if the test is going to be run in incognito browser or not (Run the test in incognito browser is used to measure Cold Starts)
INCOGNITO_BROWSER=false

# UNMANAGE_PACKAGE
# This string flag indicates which namespaced are unmanaged code and remove all namespaces found in performance tests for the specified namespaces.
# It takes the form of a comma seperated string literal. Eg : "ns1,ns2,ns3"
# I.e 
# MANAGE_PACKAGE="ns1", will mean that the tool will remove all ns1 namespace prefixes found in performance tests at execution time
# MANAGE_PACKAGE="ns1,ns2", will mean that the tool will remove all ns1 and ns2 namespace prefixes found in performance tests at execution time
UNMANAGE_PACKAGE=""

# STORE_ALERTS
# This boolean flag indicates if alerts will be store in the database or not. To store alerts in the database make this boolean flag as true.
STORE_ALERTS=true

# CUSTOM_RANGES_PATH
# This string flag indicates the path for your ranges JSON file. If you don't want to use the default range JSON defiend in this benchmarker repo, then custom range path can be defiend using this flag.
CUSTOM_RANGES_PATH=customRangePath

# DOCUMENT BULK POST PARAMETERS
# This parameter is used in Sync / Async processes testing, in order to iterate the amount of documents for which the action being tested is applied.
# DOCUMENTS_INITIAL specifies the first value of document to be bulk posted
# DOCUMENTS_ITERATION specifies the step value of documents to be bulk posted
# DOCUMENTS_MAXIMUM specifies the maximum value of document to be bulk posted (if reached)
# For example DOCUMENTS_INITIAL = 10 DOCUMENTS_ITERATION = 10 DOCUMENTS_MAXIMUM = 1000 would mean bulk post of 10-20-30- and so on until the bulk post either fails or reach 1000 documents bulk posted
# DOCUMENTS_INITIAL=X
# DOCUMENTS_ITERATION=X
# DOCUMENTS_MAXIMUM=X

# DOCUMENT LINE POST PARAMETERS
# This parameter is used in Sync / Async processes testing, in order to iterate the amount of document lines for which the action being tested is applied.
# LINES_INITIAL specifies the first value of lines in document to be posted
# DOCUMENTS_ITERATION specifies the step value of lines in document to be posted
# DOCUMENTS_MAXIMUM specifies the maximum value of lines in document to be posted (if reached)
# For example LINES_INITIAL = 10 LINES_ITERATION = 10 LINES_MAXIMUM = 1000 would mean posting a document of 10-20-30-... lines and until the post either fails or reach the posting of a document with 1000 lines
# LINES_INITIAL=X
# LINES_ITERATION=X
# LINES_MAXIMUM=X

# ASYNC PROCESS
# In order to run async processes it is needed to set the parameters for the documents(DOCUMENTS_INITIAL) and the documents lines(LINES_INITIAL)
# DOCUMENTS_INITIAL=Y
# LINES_INITIAL=X

# FORM LOAD WITH DATA LOADING
# This parameter is used in Sync / Async processes testing, in order to create data and run UI tests to see how performance is affected with different amount of data
# LINES_INITIAL specifies the first value of lines in document to be created
# For example LINES_INITIAL = 10 LINES_ITERATION = 10 LINES_MAXIMUM = 1000 would mean creating a document of 10-20-30-... lines and until the creation either fails or reach the 1000 lines limit
# LINES_INITIAL=X
# LINES_ITERATION=X
# LINES_MAXIMUM=X

# DATABASE_URL
# Specifies the url in case you are using a data base (not needed for local use execution)
# DATABASE_URL=postgresql://[user[:password]@][netloc][:port][/dbname]

# EXTERNAL_BUILD_ID
# Identifies the build execution in which the performance tests have been launched.
# The main purpose of this parameter is to identifing the CI Build in which the test suite/s have been launched.
# This value of this parameter must be set as an environment variable in the CI Pipeline, Benchmarker will automatically retrieve this environment variable if existing, and will save it into the specified database.
# An example:
# EXTERNAL_BUILD_ID='TestPipeline - Build #1'

# SOURCE_REF
# The source reference indicates the branch or origin from which the tests are being executed.
# SOURCE_REF=branch_name